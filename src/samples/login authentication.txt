To create a Firebase project and initialize it in your React project, follow these steps:

Creating a Firebase Project:

Go to the Firebase Console: Visit the Firebase Console and sign in with your Google account.

Create a New Project:

=>Click on the "Add Project" button.
=>Provide a name for your project.
=>You can also choose to enable Google Analytics for your project (optional). [i didn't use google analytics]
=>Click "Continue."
=>Configure Google Analytics (Optional):

=>If you opted for Google Analytics, follow the setup instructions.
=>If not, you can configure it later from the project settings.


After your project is created, you'll be taken to the project dashboard.
=> Click on Authentication and select your authentication method. In this project, select [email and password
=> Click on the gear icon (Project settings) in the left-hand sidebar beside Project Overview.
=>Under the "Your apps" section, click on the "</>" icon to add a web app to your project.


Register Your App:
=>Give your app a nickname (e.g., "My React App").
=>You can choose to set up Firebase Hosting if you want to host your React app using Firebase (optional).[I didn't use firebase hosting]
=>Click "Register App."

Get Firebase Configuration.
After registering your app, Firebase will provide you with a Firebase configuration object. It looks like this:

import { initializeApp } from "firebase/app";
import { getAuth } from "firebase/auth";
// Import other Firebase services you need...
const firebaseConfig = {
  apiKey: "YOUR_API_KEY",
  authDomain: "YOUR_AUTH_DOMAIN",
  projectId: "YOUR_PROJECT_ID",
  storageBucket: "YOUR_STORAGE_BUCKET",
  messagingSenderId: "YOUR_MESSAGING_SENDER_ID",
  appId: "YOUR_APP_ID"
};

const app = initializeApp(firebaseConfig);
const auth = getAuth(app);
// Initialize other Firebase services you need...
export { auth }; 


Installing firebase in your react app
=> Use the command [npm install firebase] to install firebase in your react project
=> Copy the firebase configuration code above, create a file in src folder like [firebase.js] then paste the code there

Design a form with two inputs [Email and Password]

Functionality for the form is as follows:
import React, { useState } from "react";
import "../App.css";
import { auth } from "../firebase"; [Imported the firebase.js file you created in your src folder]
import { signInWithEmailAndPassword } from "firebase/auth";
import { useHistory } from "react-router-dom"; [Install react-router-dom@6 to be able to use this API]


function Form() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [buttonLoader, setButtonLoader] = useState(false);
  const [successMessage, setSuccessMessage] = useState("");
  const [errorMessage, setErrorMessage] = useState("");
  const history = useHistory();

  const handleSubmit =  (e) => {
    e.preventDefault();

 signInWithEmailAndPassword(auth, email, password)
      .then((userCredential) => {
setEmail("");
          setSuccessMessage("Login successful!");
 setTimeout(() => {
        setSuccessMessage("");
        history.push("/name of your page route");
      }, 2000);
      })
      .catch((error) => {
setPassword("");
        setError("Wrong email or password");
      setTimeout(() => {
        setError("");
      }, 3000);
      });
  };

return (
<div>
{/* Banners. This should be in the div that houses the body of your form page not inside the form tag  */}
{/* ErrorMessage Banner*/}
        {errorMessage && (
          <div className="fixed top-0 right-0 m-4 p-4 bg-red-500 text-white rounded-lg shadow">
            {errorMessage}
          </div>
        )}
        {/* SuccessMessage Banner */}
        {successMessage && (
          <div className="fixed top-0 right-0 m-4 p-4 bg-green-500 text-white rounded-lg shadow">
            {successMessage}
          </div>
        )}
{/* End of Banners */}

<form onSubmit={handleSubmit}>

<input type="email" value={email} name="email"  onChange={(e) => setEmail(e.target.value)}placeholder="name@company.com" required />

<input type="password" value={password} name="password" onChange={(e) => setPassword(e.target.value)}placeholder="••••••••" required />

 <button type="submit" className={`${ buttonLoader ? "opacity-50 cursor-not-allowed" : "" }`}
 disabled={buttonLoader}>
 {buttonLoader ? "Logging in..." : "Log In"}
 </button>

</form>
</div>
)};
